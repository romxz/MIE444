#include <qic.h>
#include <qicextio.h>
#include <math.h>

void initialize(){
	set_tris_b(0b00000000);
	set_tris_d(0b00000000);
	setup_timer_2(T2_DIV_BY_1, 255, 1);
}


void changeMotorStep(int step, int which){
	//int reading;
	if (which==0){
		switch(step){
   		case 1:
				output_low(pin_d0);
				delay_us(1);
//				reading=input(pin_d4);
//				printf("%u", reading);
   			output_low(pin_d1);
				delay_us(1);
//				reading=input(pin_d5);
//				printf("%u", reading);
		   	output_low(pin_d2);
				delay_us(1);
//				reading=input(pin_d6);
//				printf("%u", reading);
   			output_high(pin_d3);
				delay_us(1);
//				reading=input(pin_d7);
//				printf("%u", reading);
				printf("-c1\n");
				break;
			case 2:
   	   	output_low(pin_d0);
				delay_us(1);
//				reading=input(pin_d4);
//				printf("%u", reading);
	   	   output_low(pin_d1);
				delay_us(1);
//				reading=input(pin_d5);
//				printf("%u", reading);
   	   	output_high(pin_d2);
				delay_us(1);
//				reading=input(pin_d6);
//				printf("%u", reading);
	      	output_low(pin_d3);
				delay_us(1);
//				reading=input(pin_d7);
//				printf("%u", reading);
				printf("-c2\n");
				break;
			case 3:
		   	output_low(pin_d0);
				delay_us(1);
//				reading=input(pin_d4);
//				printf("%u", reading);
      		output_high(pin_d1);
				delay_us(1);
//				reading=input(pin_d5);
//				printf("%u", reading);
	      	output_low(pin_d2);
				delay_us(1);
//				reading=input(pin_d6);
//				printf("%u", reading);
	   	   output_low(pin_d3);
				delay_us(1);
//				reading=input(pin_d7);
//				printf("%u", reading);
				printf("-c3\n");
				break;
			case 4:
   		   output_high(pin_d0);
				delay_us(1);
//				reading=input(pin_d4);
//				printf("%u", reading);
	      	output_low(pin_d1);
				delay_us(1);
//				reading=input(pin_d5);
//				printf("%u", reading);
		      output_low(pin_d2);
				delay_us(1);
//				reading=input(pin_d6);
//				printf("%u", reading);
   		   output_low(pin_d3);
				delay_us(1);
//				reading=input(pin_d7);
//				printf("%u", reading);
				printf("-c4\n");
				break;
			default:
				output_low(pin_d0);
				delay_us(1);
//				reading=input(pin_d4);
//				printf("%u", reading);
	      	output_low(pin_d1);
				delay_us(1);
//				reading=input(pin_d5);
//				printf("%u", reading);
		      output_low(pin_d2);
				delay_us(1);
//				reading=input(pin_d6);
//				printf("%u", reading);
   		   output_low(pin_d3);
				delay_us(1);
//				reading=input(pin_d7);
//				printf("%u", reading);
				printf("-coff\n");
				//printf(" bad command ");
				break;
		}
   } else if (which==1){
		switch(step){
   		case 1:
				output_low(pin_d4);
				delay_us(1);
//				reading=input(pin_d4);
//				printf("%u", reading);
   			output_low(pin_d5);
				delay_us(1);
//				reading=input(pin_d5);
//				printf("%u", reading);
		   	output_low(pin_d6);
				delay_us(1);
//				reading=input(pin_d6);
//				printf("%u", reading);
   			output_high(pin_d7);
				delay_us(1);
//				reading=input(pin_d7);
//				printf("%u", reading);
				printf("-d1\n");
				break;
			case 2:
   	   	output_low(pin_d4);
				delay_us(1);
//				reading=input(pin_d4);
//				printf("%u", reading);
	   	   output_low(pin_d5);
				delay_us(1);
//				reading=input(pin_d5);
//				printf("%u", reading);
   	   	output_high(pin_d6);
				delay_us(1);
//				reading=input(pin_d6);
//				printf("%u", reading);
	      	output_low(pin_d7);
				delay_us(1);
//				reading=input(pin_d7);
//				printf("%u", reading);
				printf("-d2\n");
				break;
			case 3:
		   	output_low(pin_d4);
				delay_us(1);
//				reading=input(pin_d4);
//				printf("%u", reading);
      		output_high(pin_d5);
				delay_us(1);
//				reading=input(pin_d5);
//				printf("%u", reading);
	      	output_low(pin_d6);
				delay_us(1);
//				reading=input(pin_d6);
//				printf("%u", reading);
	   	   output_low(pin_d7);
				delay_us(1);
//				reading=input(pin_d7);
//				printf("%u", reading);
				printf("-d3\n");
				break;
			case 4:
   		   output_high(pin_d4);
				delay_us(1);
//				reading=input(pin_d4);
//				printf("%u", reading);
	      	output_low(pin_d5);
				delay_us(1);
//				reading=input(pin_d5);
//				printf("%u", reading);
		      output_low(pin_d6);
				delay_us(1);
//				reading=input(pin_d6);
//				printf("%u", reading);
   		   output_low(pin_d7);
				delay_us(1);
//				reading=input(pin_d7);
//				printf("%u", reading);
				printf("-d4\n");
				break;
			default:
				output_low(pin_d4);
				delay_us(1);
//				reading=input(pin_d4);
//				printf("%u", reading);
	      	output_low(pin_d5);
				delay_us(1);
//				reading=input(pin_d5);
//				printf("%u", reading);
		      output_low(pin_d6);
				delay_us(1);
//				reading=input(pin_d6);
//				printf("%u", reading);
   		   output_low(pin_d7);
				delay_us(1);
//				reading=input(pin_d7);
//				printf("%u", reading);
				printf("-doff\n");
				//printf(" bad command ");
				break;
		}
	}
}

void main(){
	int dir=0;
	int count=0;
	int flap=0;
	int step=1;
	int which=0;
	initialize();
	output_high(pin_b3);
	delay_us(1);
	while (1){
   	changeMotorStep(step, which);
	   if (dir==1){
			step--;
			//printf(" downstep %u ", step);
   	} else if (dir==0) {
			step++;
			//printf(" upstep %u ", step);
		}
	   if (step>4){
			step=1;
		}
   	if (step<1){
			step=4;
		}
		delay_us(1);
		count++;
		if (count>80){
	 		count=0;
			flap++;
			if (dir==0){
				dir=1;
				step = (80%4)+1;
				//printf(" %u ", step);
			} else if (dir==1){
				dir=0;
				step=1;
			}
			if (flap>3){
				flap=0;
				dir=0;
				step=1;
				changeMotorStep(5, which);
				if (which==0){
					which=1;
				} else if (which==1){
					which=0;
				}
				//which=(which%2);
				delay_ms(500);
			}
	 	}
  }
}
